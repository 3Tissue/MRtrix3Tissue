#!/usr/bin/env python

# Script that performs B1 field inhomogeneity correction for a DWI volume
# Bias field is estimated using the mean b=0 image, and subsequently used to correct all volumes


import os, sys
import lib.app

from lib.binaryInPath  import binaryInPath
from lib.errorMessage  import errorMessage
from lib.getFSLSuffix  import getFSLSuffix
from lib.getHeaderInfo import getHeaderInfo
from lib.runCommand    import runCommand

numArgs = 2
if len(sys.argv) <= numArgs:
  sys.stderr.write('Usage: ' + os.path.basename(sys.argv[0]) + ' <input image> <output image> (options)\n')
  exit(0)
lib.app.initialise(numArgs)

fsl_path = os.environ.get('FSLDIR', '')
if not fsl_path:
  errorMessage('Environment variable FSLDIR is not set; please run appropriate FSL configuration script')

fast_cmd = 'fast'
if not binaryInPath(fast_cmd):
  fast_cmd = 'fsl5.0-fast'
  if not binaryInPath(fast_cmd):
    errorMessage('Could not find FSL program fast; please verify FSL install')

fsl_suffix = getFSLSuffix()

runCommand('mrconvert ' + sys.argv[1] + ' ' + os.path.join(lib.app.tempDir, 'in.mif'))

lib.app.gotoTempDir()

# Generate a brain mask
runCommand('dwi2mask in.mif mask.mif')

# Give FSL a compatible image
runCommand('dwiextract in.mif - -bzero | mrcalc - mask.mif -mult bzeros.mif')
bzero_dim = getHeaderInfo('bzeros.mif', 'dim')
if len(bzero_dim) == 4:
  runCommand('mrmath bzeros.mif mean - -axis 3 | mrconvert - mean_bzero.nii -stride +1,+2,+3')
else:
  runCommand('mrconvert bzeros.mif mean_bzero.nii -stride +1,+2,+3')

runCommand('fast -t 2 -o fast -n 3 -b mean_bzero.nii')

result_path = 'result' + os.path.splitext(sys.argv[2])[1]
runCommand('mrcalc in.mif fast_bias.nii -div ' + result_path)

lib.app.moveFileToDest(result_path, sys.argv[2])

lib.app.terminate()

